- name: install Docker
  hosts: all
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install apt-transport-https
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest
        update_cache: true

    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: latest
        update_cache: true

    - name: Install Docker Module for MySQL Database
      docker_image:
        name: "mysql:5.7"
        source: pull

    - name: Install Docker Module for Web App
      docker_image:
        name: "neph3l1m/app"
        force_source: yes
        source: pull

    - name: Create Docker Network 
      docker_network:
        name: "ansible_network"
        state: present

    - name: Launch MySQL Database Container
      docker_container:
        name: db
        image: mysql:5.7
        restart: true
        networks: 
          - name: "ansible_network"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: toDoApplicationDatabase
          MYSQL_USER: user
          MYSQL_PASSWORD: root

    - name: Launch Web App Container
      docker_container:
        name: webApp
        image: neph3l1m/app
        restart: true
        networks:
          - name: "ansible_network"
        env:
          DB_HOST: db
        ports:
          - "8080:8080"
